<?xml version = "1.0"?>

<unit>
	<title>Unit 1: Web, HTML5, and CSS</title>
	<section>
		<sectiontitle>What is HTML5?</sectiontitle>
		<paragraph>HTML5 is a markup language that specifies the structure and content of documents that are displayed in web browsers. It is often coded in basic text-editors. HTML5 have 2 main components within its inital html element called head and body. In HTML5 documents, elements are delimited with a start and end tag. For example &#60;html&#62;&#60;&#47;html&#62; defines an html tag. The element is defined by its name (html) within less than and greater than signs. The end delimiter can be noted with a slash in front of the ending element (but still within the signs). Between the start and end tags, you are able to put content. Depending on the element tag, HTML interprets with it differently.
		</paragraph>
	</section>
	<section>
		<sectiontitle>Basic Elements of HTML</sectiontitle>
		<paragraph>There are many different kinds of elements in html. We will be only going through some of them as there are too many to cover. First off there is the Paragraph Element denoted as &#60;p&#62;&#60;&#47;p&#62;. This element, like many elements in HTML5 are often predictable in purpose from its name. The Paragraph element forms a paragraph which places extra space above and below it. 
		</paragraph>
		<paragraph>The next element is the anchor element denoted as &#60;a href=""&#62;&#60;&#47;a&#62;. This element defines a hyperlink, and uses an attribute called href defined in its start tag as the destination of the hyperlink. The text inbetween the start and end tags are the visible content that is clickable to the user.
		</paragraph>
		<paragraph>The next element is the image element denoted as &#60;img src=""&#62;. This element defines a image and uses an attributed (like the anchor element) called src to denote the source of the image. However this element does not need an end tag like the others because it simply does not have a need for it as it pulls its content from the attributes. Another attribute to note of this element is the alt attribute which defines an alternate image if the source (src) is unable to be loaded.
		</paragraph>
	</section>
	<section>
		<sectiontitle>Lists and Tables</sectiontitle>
		<paragraph>There are two main types of lists in HTML5. There are ordered lists denoted as &#60;ol&#62;&#60;&#47;ol&#62; and there are unordered lists denoted as &#60;ul&#62;&#60;&#47;ul&#62;. The difference is that ordered lists will represent an increasing or decreasing manner of each marked list item. However, unordered lists just represent their list items as undefined points (ex. bullets or dashes). In either case the content of each list requires another element called list item denoted as &#60;li&#62;&#60;&#47;li&#62;. List items define the points for each list, and their content define what text each point will respresent.
		</paragraph>
		<paragraph>Tables are one of the original ways to represent data. In HTML5, a table is denoted as &#60;table&#62;&#60;&#47;table&#62; and has 3 distinct sections called head, body, and foot. The head section denoted as &#60;thead&#62;&#60;&#47;thead&#62; defines header column information. The body section denoted as &#60;tbody&#62;&#60;&#47;tbody&#62; defines the primary data of the table. Finally the foot section denoted as &#60;tfoot&#62;&#60;&#47;tfoot&#62; defines the footer of the table.
		</paragraph>
		<paragraph>Each of the main 3 sections use &#60;tr&#62;&#60;&#47;tr&#62; to define a row, which must be between the start and end tags of each section. Furthermore, for each row columns can be define in a similar fashion (between tags). However, the thead and the tfoot both use &#60;th&#62;&#60;&#47;th&#62; to define columns (called header columns) while the tbody uses &#60;td&#62;&#60;&#47;td&#62; to define column data.
		</paragraph>
	</section>
	<section>
		<sectiontitle>Attributes, Styles, and CSS</sectiontitle>
		<paragraph>As we briefly mentioned earlier, elements in HTML5 can carry attributes in their elements. Attributes are very useful in defining how HTML5 handles presents and manages certain elements. One important attribute is the style attribute, which further more defines style-attributes. Elements that have a common purpose (such as displaying text) will have common style-attributes such as font-weight, font-family, and font-size. Other elements that do not display text will not have these style-attributes, so it's worth while for you to lookup if a element has an specific attribute if you are unsure.
		</paragraph>
		<paragraph>Now the act of defining style elements within the start tag as an attribute is defined as an inline style. This is often not a common practice unless the application is small or is used for practice. The reason is because by defining each element individually, you cause a dependency on the element itself. This makes making changes, maintenance, and designing a huge burden for future uses. An alternative for this is the popular CSS (Cascading Style Sheet). This lets you define what styles different elements and classes have. There are two different ways to include a CSS with a HTML5 document. The first is called embedded style sheets in which you embed a CSS document in the HTML5 document's head section. The second is called a external style sheet which define a CSS document in a seperate file (with the extension .css) and is linked to the initial HTML5 document.
		</paragraph>
		<paragraph>We will first look at the guts (main content) of a CSS document. In a CSS document, you are able to define elements such as body {font-family: arial, helvetica, sans-serif;} which define the body element of the HTML5 document to have a font-family of arial. If arial if unavailable, it will cascade down the order until one is available. This makes putting a common font-family at the end important. In CSS documents, you can define element classes such as p.important {font-weight: bold}, which only applies to p elements that have the class attribute important. In embedded style sheets, the definition of a CSS document is enclosed in the &#60;style type = "text/css"&#62;&#60;&#47;style&#62; tags within the head element of an HTML5 document. Whereas a external style sheet is defined with just the guts in the external file, but is linked with the use of &#60;link rel = "stylesheet" type = "text&#47;css" href= "styles.css"&#62; in the head of an HTML5 document where the href is the location of the CSS file.
		</paragraph>
	</section>
</unit>

<quiz>
	<question>
		<inquiry>Which of the following is a correct statement about HTML5?</inquiry>
		<answer correct = "">HTML5 is a object-orientated language that specifies the structure and content of documents displayed in web browsers</answer>
		<answer correct = "">HTML5 is a markup language that specifies only the content of documents displayed in web browsers</answer>
		<answer correct = "*">HTML5 is a markup language that specifies the structure and content of documents displayed in web browsers</answer>
		<answer correct = "">HTML5 is a object-orientated language that specifies only the content of documents displayed in web browsers</answer>
	</question>
	<question>
		<inquiry>Which of the following elements do not require an end tag?</inquiry>
		<answer correct = "">p</answer>
		<answer correct = "">a</answer>
		<answer correct = "*">img</answer>
		<answer correct = "">table</answer>
	</question>
	<question>
		<inquiry>What are the td tags used for?</inquiry>
		<answer correct = "">Defining column data for the thead</answer>
		<answer correct = "*">Defining column data for the tbody</answer>
		<answer correct = "">Defining column data for the tfoot</answer>
		<answer correct = "">Defining column data for the trow</answer>
	</question>
	<question>
		<inquiry>When defining a CSS document the ".name" refers to the _____ having a value of name</inquiry>
		<answer correct = "">id</answer>
		<answer correct = "">name</answer>
		<answer correct = "">tag</answer>
		<answer correct = "*">class</answer>
	</question>
	<question>
		<inquiry>Defining more than one font-family will have the following effect:</inquiry>
		<answer correct = "">Cause a altering pattern of font-family on elements defined afterwards</answer>
		<answer correct = "">Cause the program to pick the most popular one</answer>
		<answer correct = "">Cause the program to pick from last to first depending if the font-family is available</answer>
		<answer correct = "*">Cause the program to pick from first to last depending if the font-family is available</answer>
	</question>
</quiz>